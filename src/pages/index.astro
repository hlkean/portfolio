---
import Layout from '../layouts/Layout.astro';
export const prerender = false;

const site_key = import.meta.env.CAPTCHA_KEY ?? process.env.CAPTCHA_KEY;
---

<Layout title="Welcome to Astro.">
	<script is:inline src="https://www.google.com/recaptcha/api.js"></script>
	<main>
		<h1>Hey! I'm Henry</h1>
		<section>
			<div>
				<p>
					I'm a Maine based software engineer and this is a space I'm creating to store my musings, ideas, and just-for-fun explorations that I work on when I'm not helping out industry leading clients in the healthcare space. 
				</p>
				<p>
					It certainly doesn't look like much at the moment, but as with all software development, it will grow incrementally. 
				</p>
				<p>
					I hope you'll check back to see what I've got in the works or what new ideas I'm digging into. Until then, feel free to grab a copy of my résumé, check out some personal projects in github (sorry, all of my clients own the code I write for them), and/or reach out with any questions or if you'd like to pull me in to any interesting projects you're working on!
				</p>
			</div>
		</section>
		<ul>
			<li>Résumé</li>
			<li>Github</li>
			<li>Get in touch</li>
		</ul>
		<form id="contact-form">
			<input type="email" name="email" placeholder="Your Email" required />
			<textarea name="message" placeholder="Your Message" required></textarea>
			<button class="g-recaptcha" data-sitekey={site_key} data-callback="onSubmit" data-action="submit" type="submit"> 
				Click me to verify the captcha challenge!
			</button>
		</form>

	<script>
		interface FormFields extends EventTarget {
			email: HTMLInputElement;
			message: HTMLTextAreaElement;
		}
		
		interface EmailRequest {
			email: string;
			message: string;
		}

		const sendEmail = ({email, message}: EmailRequest) =>{
			console.log('send email');
		fetch("/api/send-email", {
				method: "POST",
				body: JSON.stringify({
					email: email,
					message: message,
				}),
			}).then((response) => {
				response.json()
				console.log('response: ', response);
			}).catch((error) => {
				console.log("error sending email: ", error);
				throw(error);
			});
		}

		document?.getElementById('contact-form')?.addEventListener('submit', async (e) => {
			e.preventDefault();
			console.log('submitted');
			try {
				const email = (e.target as FormFields)?.email?.value;
				const message = (e.target as FormFields)?.message.value;
				sendEmail({email, message});
			} catch (error) {
				console.log("error sending email: ", error);
			};
		});
	</script>
    <script is:inline>
		function onSubmit(token) {
			console.log('captcha submit')
		fetch("/api/recaptcha", {
			method: "POST",
			body: JSON.stringify({ recaptcha: token })
		})
		.then((response) => response.json())
		.then((gResponse) => {
			if (gResponse.success) {
			console.log('success!!', gResponse)
			// document?.getElementById('contact-form').submit();
			// Captcha verification was a success
			} else {
			console.log('womp!', gResponse);
			// Captcha verification failed
			}
		})
		}

		document?.getElementById('contact-form')?.addEventListener('submit', async (e) => {
			e.preventDefault();
			console.log('submitted');
			const email = e.target?.email?.value;
			const message = e.target?.message.value;
			sendEmail({email, message});
		});
    </script>
		
		<!-- <script is:inline src="https://www.google.com/recaptcha/api.js" async defer></script>
		
		<script>
			interface FormFields extends EventTarget {
				email: HTMLInputElement;
				message: HTMLTextAreaElement;
			}

			document?.getElementById('contact-form')?.addEventListener('submit', async (e) => {
				e.preventDefault();
				const email = (e.target as FormFields)?.email?.value;
				const message = (e.target as FormFields)?.message.value;
				const captchaToken = grecaptcha.getResponse();
			
				const response = await fetch('https://qrv0rubkp7.execute-api.us-east-2.amazonaws.com/prod/send-email', {
				method: 'POST',
				headers: {
					'Content-Type': 'application/json',
				},
				body: JSON.stringify({
					email: email,
					message: message,
					captchaToken: captchaToken,
				}),
				});
			
				const data = await response.json();
				if (response.ok) {
				alert(data.message);
				} else {
				alert(`Error: ${data.error}`);
				}
			});
		</script> -->
	</main>
</Layout>

<style>
	main {
		margin: auto;
		padding: 1rem;
		width: 800px;
		max-width: calc(100% - 2rem);
		color: var(--color-primary);
		font-size: 20px;
		line-height: 1.6;
	}
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}
	.logo {
		height: 200px;
		width: 200px;
	}
</style>
